name: University Project - Multi-Branch CI/CD

on:
  push:
    branches: [development, staging, master]

env:
  REGISTRY: docker.io
  IMAGE_NAME: university-project
  TAG: ${{ github.ref_name }}

jobs:
  deploy:
    runs-on: self-hosted

    strategy:
      matrix:
        include:
          - branch: development
            port: 8081
            env_file: .env.dev
            should_push: false
          - branch: staging
            port: 8082
            env_file: .env.stage
            should_push: true
          - branch: master
            port: 8080
            env_file: .env.prod
            should_push: true

    steps:
      - name: Match matrix to pushed branch
        if: github.ref_name == matrix.branch
        run: echo "Deploying branch: ${{ matrix.branch }}"

      - name: Checkout code
        uses: actions/checkout@v4
        if: github.ref_name == matrix.branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: github.ref_name == matrix.branch

      - name: Login to Docker Hub (only for staging/master)
        if: matrix.should_push && github.ref_name == matrix.branch
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker Image
        if: github.ref_name == matrix.branch
        run: |
          echo "Building image $REGISTRY/$IMAGE_NAME:$TAG"
          docker build \
            -t $REGISTRY/$IMAGE_NAME:$TAG \
            -t $REGISTRY/$IMAGE_NAME:latest .

      - name: Run Tests
        if: github.ref_name == matrix.branch
        run: |
          echo "Running tests for $REGISTRY/$IMAGE_NAME:$TAG"
          docker run --rm $REGISTRY/$IMAGE_NAME:$TAG npm test

      - name: Push Docker Image (only for staging/master)
        if: matrix.should_push && github.ref_name == matrix.branch
        run: |
          echo "Pushing image $REGISTRY/$IMAGE_NAME:$TAG"
          docker push $REGISTRY/$IMAGE_NAME:$TAG

      - name: Deploy Container
        if: github.ref_name == matrix.branch
        run: |
          echo "Stopping existing container..."
          docker stop uni-project-${{ matrix.branch }} || true
          docker rm uni-project-${{ matrix.branch }} || true

          echo "Running new container on port ${{ matrix.port }}..."
          docker run -d \
            --name uni-project-${{ matrix.branch }} \
            -p ${{ matrix.port }}:8080 \
            --env-file ${{ matrix.env_file }} \
            $REGISTRY/$IMAGE_NAME:$TAG
