name: University Project - Multi-Branch Pipeline

on:
  push:
    branches: [ "development", "staging", "master" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: university-project
  TAG: ${{ github.ref_name }}

jobs:
  deploy-development:
    if: github.ref_name == 'development'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$TAG .

      - name: Run tests
        run: docker run --rm $REGISTRY/$IMAGE_NAME:$TAG npm test

      - name: Deploy container
        run: |
          docker stop uni-project-$TAG || true
          docker rm uni-project-$TAG || true
          docker run -d \
            --name uni-project-$TAG \
            -p 8081:8080 \
            --env-file .env.dev \
            $REGISTRY/$IMAGE_NAME:$TAG

  deploy-staging:
    if: github.ref_name == 'staging'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$TAG .

      - name: Run tests
        run: docker run --rm $REGISTRY/$IMAGE_NAME:$TAG npm test

      - name: Push Image
        run: docker push $REGISTRY/$IMAGE_NAME:$TAG

      - name: Deploy container
        run: |
          docker stop uni-project-$TAG || true
          docker rm uni-project-$TAG || true
          docker run -d \
            --name uni-project-$TAG \
            -p 8082:8080 \
            --env-file .env.stage \
            $REGISTRY/$IMAGE_NAME:$TAG

  deploy-production:
    if: github.ref_name == 'master'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$TAG .

      - name: Run tests
        run: docker run --rm $REGISTRY/$IMAGE_NAME:$TAG npm test

      - name: Push Image
        run: docker push $REGISTRY/$IMAGE_NAME:$TAG

      - name: Deploy container
        run: |
          docker stop uni-project-$TAG || true
          docker rm uni-project-$TAG || true
          docker run -d \
            --name uni-project-$TAG \
            -p 8080:8080 \
            --env-file .env.prod \
            $REGISTRY/$IMAGE_NAME:$TAG
